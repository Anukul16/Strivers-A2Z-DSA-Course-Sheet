class Pair{
    int row;int col;
    Pair(int row,int col){this.row=row;this.col=col;};
}
class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int n=image.length;
        int m=image[0].length;
        int dummy[][]=new int[n][m];
        Queue<Pair>q=new LinkedList<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                dummy[i][j]=image[i][j];
            }
        }
        q.add(new Pair(sr,sc));
        dummy[sr][sc]=color;
        int dRow[]={-1,0,1,0};
        int dCol[]={0,1,0,-1};

        while(q.size()>0){
            int r=q.peek().row;
            int c=q.peek().col;
            q.poll();
            for(int i=0;i<4;i++){
                int nRow=r+dRow[i];
                int nCol=c+dCol[i];
                if(nRow>=0 && nRow<n && nCol>=0 && nCol<m && image[nRow][nCol]==image[r][c] && dummy[nRow][nCol]!=color){
                    q.add(new Pair(nRow,nCol));
                    dummy[nRow][nCol]=color;
                }
            }
        }
        return dummy;
    }
}

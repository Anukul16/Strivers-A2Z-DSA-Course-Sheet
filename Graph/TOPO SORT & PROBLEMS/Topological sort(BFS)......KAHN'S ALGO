

/*Complete the function below*/


class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
       int ndegree[]=new int[V];
       for(int i=0;i<V;i++){
           for(int x:adj.get(i)){
               ndegree[x]++;
           }
       }
       Queue<Integer>q=new LinkedList<>();
       for(int i=0;i<V;i++){
           if(ndegree[i]==0)q.add(i);
       }
       int ans[]=new int[V];
       int k=0;
       while(q.size()>0){
          int node=q.poll();
          ans[k++]=node;
          for(Integer it:adj.get(node)){
              ndegree[it]--;
              if(ndegree[it]==0){
                  q.add(it);
              }
          }
           
       }
       return ans;
    }
}
